// 정수를 key로 두고 bool 배열을 값으로 받는 dictionary
static Dictionary<int, bool[]> cardDeck = new Dictionary<int, bool[]>();
cardDeck[1][5] = true;
같은 코드가 왜 성립하는지 잘 모르겠다. 딕셔너리는 넣을 수 있는 매개변수의 제한이 없는 건가?
=> 두 번 접근하는 코드다. 
cardDeck[1]:
딕셔너리에서 키가 1인 항목을 가져온다. 이건 bool[] 배열.
[5]:
그 배열에서 5번째 인덱스에 접근해서 값을 바꾼다.
아래와 같다.
bool[] array = cardDeck[1];
array[5] = true;

한 마디로 딕셔너리의 역할은 cardDeck[1] 여기까지였고,
그 뒤에 [5]는 (배열)[5] 이런 느낌으로 사용된 거라고 볼 수 있다.

this is login
나는 테스트 2입니다.

죄송합니다.
하지만 제가 진짜입니다.

전 메인브랜치2로 또 머지를 해보려고 합니다.
그냥 테스트 브랜치2에선 아무 것도 모릅니다.

이제 압니다.
특정 브랜치에서 메인으로 머지
=> 다른 브랜치에서 작업하려고 하지만, 이미 같은 부분에 작업이 진행되었을 수 있음
=> 그러므로 최신화 작업을 진행한 후 코드를 작성해야 한다.
=> main 및 다른 브랜치를 패치한다.
=> 작업을 시작할 브랜치를 선택하고, merge into (최신화 진행할 브랜치) 한다.
=> 이후 푸시를 진행하고, 다른 코드를 마저 진행한다.

이건 테스트 브랜치 2입니다.